#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from genbridge import CommandReceiver
from genbridge.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  Response sendMoveCommand(MoveCommandData cmd, int idConnection)'
  print '  Response sendWaitCommand(WaitCommandData cmd, int idConnection)'
  print '  Response sendLandCommand(LandCommandData cmd, int idConnection)'
  print '  Response sendFollowCommand(FollowCommandData cmd, int idConnection)'
  print '  Response sendAttackCommand(AttackCommandData cmd, int idConnection)'
  print '  Response sendDropMilitarsCommand(DropMilitarsCommandData cmd, int idConnection)'
  print '  Response sendFillFuelTankCommand(FillFuelTankCommandData cmd, int idConnection)'
  print '  Response sendExchangeResourcesCommandData(ExchangeResourcesCommandData cmd, int idConnection)'
  print '  Response sendBuildPlaneCommand(BuildPlaneCommandData cmd, int idConnection)'
  print '  Response sendCancelBuildRequestCommandData(CancelBuildRequestCommandData cmd, int idConnection)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = CommandReceiver.Client(protocol)
transport.open()

if cmd == 'sendMoveCommand':
  if len(args) != 2:
    print 'sendMoveCommand requires 2 args'
    sys.exit(1)
  pp.pprint(client.sendMoveCommand(eval(args[0]),eval(args[1]),))

elif cmd == 'sendWaitCommand':
  if len(args) != 2:
    print 'sendWaitCommand requires 2 args'
    sys.exit(1)
  pp.pprint(client.sendWaitCommand(eval(args[0]),eval(args[1]),))

elif cmd == 'sendLandCommand':
  if len(args) != 2:
    print 'sendLandCommand requires 2 args'
    sys.exit(1)
  pp.pprint(client.sendLandCommand(eval(args[0]),eval(args[1]),))

elif cmd == 'sendFollowCommand':
  if len(args) != 2:
    print 'sendFollowCommand requires 2 args'
    sys.exit(1)
  pp.pprint(client.sendFollowCommand(eval(args[0]),eval(args[1]),))

elif cmd == 'sendAttackCommand':
  if len(args) != 2:
    print 'sendAttackCommand requires 2 args'
    sys.exit(1)
  pp.pprint(client.sendAttackCommand(eval(args[0]),eval(args[1]),))

elif cmd == 'sendDropMilitarsCommand':
  if len(args) != 2:
    print 'sendDropMilitarsCommand requires 2 args'
    sys.exit(1)
  pp.pprint(client.sendDropMilitarsCommand(eval(args[0]),eval(args[1]),))

elif cmd == 'sendFillFuelTankCommand':
  if len(args) != 2:
    print 'sendFillFuelTankCommand requires 2 args'
    sys.exit(1)
  pp.pprint(client.sendFillFuelTankCommand(eval(args[0]),eval(args[1]),))

elif cmd == 'sendExchangeResourcesCommandData':
  if len(args) != 2:
    print 'sendExchangeResourcesCommandData requires 2 args'
    sys.exit(1)
  pp.pprint(client.sendExchangeResourcesCommandData(eval(args[0]),eval(args[1]),))

elif cmd == 'sendBuildPlaneCommand':
  if len(args) != 2:
    print 'sendBuildPlaneCommand requires 2 args'
    sys.exit(1)
  pp.pprint(client.sendBuildPlaneCommand(eval(args[0]),eval(args[1]),))

elif cmd == 'sendCancelBuildRequestCommandData':
  if len(args) != 2:
    print 'sendCancelBuildRequestCommandData requires 2 args'
    sys.exit(1)
  pp.pprint(client.sendCancelBuildRequestCommandData(eval(args[0]),eval(args[1]),))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
